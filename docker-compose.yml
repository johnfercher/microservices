version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest

    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

    networks:
      - prod



  kafka:
    image: confluentinc/cp-kafka:latest

    ports:
      - 9092:9092

    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    networks:
      - prod

    depends_on:
      - zookeeper



  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0

    ports:
      - "9200:9200"
      - "9300:9300"

    environment:
      discovery.type: "single-node"
      xpack.security.enabled: "false"

    volumes:
      - /usr/share/elasticsearch/data:/usr/share/elasticsearch/data

    networks:
      - prod



  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.0

    links:
      - elasticsearch

    environment:
      - "ES_JAVA_OPTS=-Xmx256m -Xms256m"
      - cluster.routing.allocation.disk.threshold_enabled=false

    ulimits:
      memlock:
        soft: -1
        hard: -1

    ports:
      - 12201:12201/udp
      - 12202:12202

    volumes:
      - .:/etc/logstash

    command: logstash -f /etc/logstash/logstash.conf

    networks:
      - prod

    depends_on:
      - elasticsearch



  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0

    ports:
      - "5601:5601"

    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200

    networks:
      - prod

    depends_on:
      - elasticsearch



  user-db:
    image: user-db
    container_name: user-db

    expose:
      - '3306'
    ports:
      - "3306:3306"

    environment:
      MYSQL_ROOT_PASSWORD: supersecret
      MYSQL_DATABASE: UserDb
      MYSQL_USER: AdminUser
      MYSQL_PASSWORD: AdminPassword

    volumes:
      - mysql:/var/lib/mysql

    networks:
      - prod



  user-api:
    image: user-api
    container_name: user-api

    expose:
      - '8081'
    ports:
      - "8081:8080"

    networks:
      - prod

    depends_on:
      - user-db
      - kafka
      - logstash



volumes:
  mysql:
  esdata:
    driver: local

networks:
  prod:
    driver: bridge